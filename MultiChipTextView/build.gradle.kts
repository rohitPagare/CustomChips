plugins {
    alias(libs.plugins.android.library)
    id("maven-publish")
    id("signing")
}

android {
    namespace = "com.orhotech.multichiptextview"
    compileSdk = 34

    defaultConfig {
        minSdk = 24

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles("consumer-rules.pro")
    }

    // Include sources and javadoc .jar files as secondary artifacts
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation(libs.appcompat)
    implementation(libs.material)
    testImplementation(libs.junit)
    androidTestImplementation(libs.ext.junit)
    androidTestImplementation(libs.espresso.core)
}

// Configure the maven-publish plugin.
publishing {
    publications {

        // This says: defer this block until all of the other stuff has run first.
        // This is required since components["release"] is generated by the Android
        // plugin in `afterEvaluate` itself, which forces us to do the same.
        afterEvaluate {
            // Creates a Maven publication called "release".
            create<MavenPublication>("release") {
                from(components["release"])
                groupId = "com.orhotech.android"
                artifactId = "multichiptextview"
                version = "1.0.0"

                pom {
                    packaging = "aar"
                    name.set("multichiptextview")
                    description.set("This library is Custom TextView allowing users to enter text and create material chips in the text field.!")
                    url.set("https://github.com/example/foobar")
                    licenses {
                        license {
                            name.set("MIT License")
                            url.set("https://opensource.org/license/mit/")
                        }
                    }
                    developers {
                        developer {
                            name.set("Rohit Pagare")
                            email.set("rpshooter02@gmail.com")
                        }
                    }
                    scm {
                        url.set(pom.url.get())
                        connection.set("scm:git:${url.get()}.git")
                        developerConnection.set("scm:git:${url.get()}.git")
                    }
                }
            }
        }
    }
}
